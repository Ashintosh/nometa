services:
  postgres:
    image: postgres:16
    container_name: nometa-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_ADMIN_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_ADMIN_PASSWORD}
      POSTGRES_APP_USER: ${POSTGRES_APP_USER}
      POSTGRES_APP_PASSWORD: ${POSTGRES_APP_PASSWORD}
    networks:
      - nometa-network
    volumes:
      - nometa_db-data:/var/lib/postgresql/data
      - ./db/scripts:/scripts:ro
      - ./db/run_migrations.sh:/docker-entrypoint-initdb.d/run_migrations.sh:ro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_ADMIN_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: nometa-redis
    restart: unless-stopped
    command: ["redis-server", "--save", "900", "1", "--loglevel", "warning"]
    networks:
      - nometa-network
    volumes:
      - nometa_redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # backend:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: nometa-backend
  #   restart: unless-stopped
  #   env_file:
  #     - .env
  #   networks:
  #     - nometa-network
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     memcached:
  #       condition: service_started
  #   ports:
  #     - "8080:8080"
  #   healthcheck:
  #     test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
  #     interval: 30s
  #     timeout: 5s
  #     retries: 5
  #     start_period: 5s

networks:
  nometa-network:
    driver: bridge

volumes:
  nometa_db-data:
    driver: local
  nometa_redis-data:
    driver: local
